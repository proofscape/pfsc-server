{#
; As noted in [this blog post](https://ma.ttias.be/supervisor-job-spawnerr-cant-find-command-something/),
; the `directory` setting does _not_ help `supervisor` to find the
; executable in the `command`. It will only search its own `PATH`,
; so we must use an absolute path here. However, the `directory`
; setting still does serve a purpose, in allowing us to use relative
; paths for subsequent _arguments_ in the `command`, such as `worker.py`
; below.
#}

{% if worker %}
; See <https://python-rq.org/patterns/supervisor/#putting-rq-under-supervisor>
[program:pfsc_worker]
directory=/home/pfsc/proofscape/src/pfsc-server
{% if use_venv %}
command=/home/pfsc/proofscape/src/pfsc-server/venv/bin/python worker.py
{% else %}
command=python worker.py
{% endif %}
priority=220
process_name=%(program_name)s-%(process_num)s
; If you want to run more than one worker instance, increase this:
numprocs=1
; RQ requires the TERM signal to perform a warm shutdown. If RQ does not die
; within 10 seconds, supervisor will forcefully kill it
stopsignal=TERM
user=pfsc
autostart=true
{% endif %}

{% if web %}
[program:pfsc_web]
directory=/home/pfsc/proofscape/src/pfsc-server
{% if use_venv %}
command=/home/pfsc/proofscape/src/pfsc-server/venv/bin/python web.py{{' oca' if oca else ''}}
{% else %}
command=python web.py{{' oca' if oca else ''}}
{% endif %}
priority=230
user=pfsc
autostart=true
{% endif %}
